Test:
    package=Package
    class_name=Class
    scenario=Scenario
    request=Request
    cases+=Case
;

Package:
    /(#{1,6} )?package/ ':' name=/[a-z][a-z0-9_]*((\.[a-z0-9_]+)+[0-9a-z_])?/
;

Class:
    /(#{1,6} )?class/ ':' name=ID
;

Scenario:
    /(#{1,6} )?scenario/ ':' name=/[A-Za-z0-9].*/
;

Request:
	/(#{1,6} )?request/ ':'
    '```graphql'
    type=RequestType name=ID '{'
    attributes+=Attribute
    '}'
    '```'
;

RequestType:
    'query' | 'mutation'
;

Attribute:
    name=ID('(' arguments+=Argument[','] ')')? ('{' attributes+=Attribute '}')?
;

Argument:
    name=ID ':' value=ArgumentValue
;

ArgumentValue:
    SimpleValue | CompoundValue | TagValue
;

SimpleValue:
    STRING | INT | FLOAT | BOOL
;

CompoundValue:
    '{' (arguments+=Argument[','])? '}'
;

TagValue:
    '<' name=ID '>'
;

Case:
    response=Response
    examples=Examples
;

Response:
    /(#{1,6} )?response/ ':'
    '```json'
    json=JsonObject
    '```'
;

JsonObject:
	'{' members+=JsonMember[','] '}'
;

JsonMember:
	key=STRING ':' value=JsonValueWithTags
;

JsonValueWithTags:
    JsonValue | TagValue
;

JsonValue:
	JsonObject  | JsonArray | JsonNull | SimpleValue
;

JsonArray:
	'[' (multiplier=Multiplier)? values*=JsonValueWithTags[','] ']'
;

Multiplier:
    '[' value=MultiplierValue ']'
;

MultiplierValue:
    INT | TagValue
;

JsonNull:
	value='null'
;

Examples:
    /(#{1,6} )?examples/ ':'
    attributes=ExampleAttributes
    examples+=Example
;

ExampleAttributes:
    '|' attributes+=ExampleAttribute['|'] '|'
;

ExampleAttribute:
    name=ID
;

Example:
    RowSeparator
    ('|' values+=JsonValueWithEmptyValue['|'] '|')+
;

RowSeparator:
    '|' (('-')+ '|')+ 
;

JsonValueWithEmptyValue:
    JsonValue | '*'
;